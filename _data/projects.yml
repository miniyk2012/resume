- project: 趣头条大数据质量保障系统(一期)开发
  company: 趣头条
  duration: 2020年10月 &mdash; 2021年1月
  url: "https://github.com/miniyk2012/company_bigdata_platform"
  description:
    <ol class="resume-item-list">
      <li>大数据质量保障系统整合了商业化大数据离线和实时链路, 提供了脚本和配置2类规则, 告警显示在前端血缘图上, 微信邮件通知; 在发生事故前预警，最大限度降低系统故障; 在发生问题后第一时间定位问题解决问题.</li>
      <li>后端使用Django, 血缘图存储在neo4j, 用DAG展示, 模型支持软删除, 任务调度使用celery, broker使用redis, API使用CBV, 前端使用了React Ant Design. 前后端分离, Django和celery都使用分布式部署. 并搭建pushgateway, 接入公司的prometheus和granfana.</>
      <li>该系统主要包括调度模块, 规则模块, 告警模块, 血缘图模块. 调度模块使用beat实现定时调度, 并支持复杂调度逻辑, 用乐观锁解决并发问题, 超时job翻转异常job; 规则都由celery独立进程运行, 脚本类规则可以直接在前端选择显示代码内容, 并通过反射运行; 配置类规则可指定数据源和表名, 指定时间区间. 告警模块与其他组件解耦也运行于celery, 负责标红血缘图和发出微信邮件.</>
      <li>该系统性能优异, API层3个pod12个进程; 规则运行层3个pod15个进程,  两者间由redis作为broker解耦. API层100TPS, 95线1s;  规则运行层支持15个规则并发运行, 可调度1000+规则. 血缘图支持1000+节点, 分布式部署, 自动扩缩容, 完全满足商业化大数据监控保障需求.</>
      <li>该系统属于数据中台的监控组件, 可以用于以下业务场景：离线表延迟和字段准确性的监控, 实时数仓上下游数据对比, 维度关联率百分比, 实时计费mysql与离线表对比, 维度表ttl监控等.</>
    </ol>
  responsibility: 主导设计开发绝大部分功能, 并带领6人团队参与讨论设计开发.

- project: 趣头条大数据造数工具集开发
  company: 趣头条
  duration: 2020年5月 &mdash; 2020年7月
  description:
    <ol class="resume-item-list">
      <li>展点消的数据测试, 需要构造各类不同的kafka消息, 每种消息都有几十到几百个字段. 之前的测试同学每次从头写发送消息的的函数, 每个2小时, 一个项目需要2-3天. 我归纳总结共性问题, 发现每种消息的可变部分就是几十个字段, 而消息体的构造和发送kafka的流程都完全一致. 据此设计出一套底层造数框架. 将消息的体的构造过程固化, 消息字段设计出随机,枚举,范围策略. 测试人员只需编写几行代码就可以构造出复杂的消息体, 每个用例从2小时减少到5分钟左右, 开发同学也持续使用该工具, 用于开发验证.</li>
      <li>使用django设计开发了具有web界面的大数据测试平台, 将造数工具通过web方式展现到前端, 点击即可使用. 开发了可配置的数据对比工具, 可从不同的数据源读取数据对比并展示.</li>
      <li>线上流量迁移到线下的web后端开发, 将flink-dashboard, yarn的列表整合到大数据平台, 将jenkins数据每日同步至平台, 由平台管理触发大数据的jenkins任务.</li>
      <li>编写presto, clickhouse SQL查询工具库,封装为第三方包供测试人员调用, 其中presto工具使用了async技术, 异步解析csv文件, 五个协程并发查询速度提升5倍.</li>
      <li>将造数工具, 大数据工具库和unittest整合为大数据测试框架, 并加入钩子统计不同测试人员的测试成果.</li>
      <li>目前上述各类工具集持续供测试开发团队共13人使用, 频次10+/日, 提升测试效率90%, 也提升了开发调试和问题复现的速度.</>
    </ol>
  responsibility: 主导大数据造数工具开发.

- project: 趣头条mock平台二期开发
  company: 趣头条
  duration: 2020年4月 &mdash; 2020年5月
  description:
    <ol class="resume-item-list">
      <li>提供项目管理，规则管理，状态管理等可视化的操作, 提供更加灵活的mock响应返回, 比如响应状态码，延时，不同的数据响应(循环，随机等), 支持mock环境和真实环境的一键切换. 支持分布式部署, 单节点单服务性能, 500并发, QPS:支持2万+, 99线:50ms, 可满足常规的性能测试，故障演练测试中的大流量回放等</li>
      <li>使用golang开发了生成配置文件, 文件下发, moco启停, API接口等后端功能, 绘制原型图, 监督前端开发页面.</li>
      <li>持续维护mock功能, 协助公司各团队接入, 目前已有13个业务团队100+个接口在使用二期mock功能, 提升了公司测试团队测试效率和自动化水平.</li>
    </ol>
  responsibility: 主导mock二期的设计,开发,上线,运营.

- project: job-manager
  company: 陆金所
  duration: 2019年10月 &mdash; 2019年11月
  url: "https://github.com/miniyk2012/lufax_job_manager"
  description: 
    <ol class="resume-item-list">
      <li>后端flask, 前端Spectre.css开发的测试环境分布式job触发工具, 可切换全公司13个测试环境, 根据数据库配置自动填充job请求参数, 提供1000+个定时任务的触发.</> 
      <li>高性能高可用, 分布式部署, 后端使用线程池和超时熔断技术, 单节点单服务器支持触发500个job. 目前供测试团队100多人同时使用, PV>3000/月.</>
    </ol>
  responsibility: 独立完成立项, 设计, 开发, 部署.

- project: CI流程工具
  company: 陆金所
  duration: 2018年3月 &mdash; 2018年4月
  description: 使用spring boot和react开发了的CI流程工具, 当开发在发布平台移测时, 调用公司内部api做代码的部署, 调用jenkins api触发测试用例运行, 使用JsoupXpath爬取jenkins运行结果, 阻止或允许流程继续. 设计上采用多阶段任务做解耦, 前一个task完成后, 自动触发下一个task执行.
  responsibility: 4人团队主力, 负责整体项目串联, 并承担了jenkins job触发, 查询运行状态和爬取jenkins结果的功能开发.
  
- project: 精准测试工具
  company: 陆金所
  duration: 2017年5月 &mdash; 2017年8月
  description: 为了减少测试团队工作量提高工作效率, 根据代码变更搜索测试用例的工具. 在测试用例中添加Listener, 每个测试用例运行的生命周期前后拉取jacoco代码覆盖，获得测试用例与开发代码的对应关系, 在新代码移测时根据git diff获取对应的测试子集做精准测试, 减少了全量回归时间.
  responsibility: 4人团队成员之一, 负责实现前端动态页面功能和jenkins job触发功能.

- project: 考勤系统
  company: 易路软件
  duration: 2016年7月 &mdash; 2017年1月
  description: 公司主打产品, 为中大型企业提供员工打卡服务, 可以配置多种元数据, 如工作日, 法定假期, 上下班时间, 年休假天数等, 每天定时任务计算企业员工的考勤结果, 并生成报表为HR查看.
  responsibility: 作为开发组长在半年多的时间里领导团队完成了十多次产品迭代, 负责员工间的code review, 与产品紧密配合, 不断完善现有产品功能.

- project: 支付核心、触达域、社区域业务测试
  company: 陆金所
  duration: 2017年1月 &mdash; 2019年12月
  # url: "#"
  description: 
    <ol class="resume-item-list">
      <li>搭建子系统的TestNg环境, 串联十多个java微服务做全流程的测试; 编写测试库用于提升测试效率, 编写银行mock服务器.</li>
      <li>支付测试：承担代扣、直投、投标、复投、转让、放款、回款、赎回等业务场景的全流程测试.</li>
      <li>触达测试：负责短信、站内信、微信、邮件、个推等高性能服务的测试工作.</li>
      <li>社区测试：领导3人小组, 负责app的h5页面的发帖、新闻、营销活动的测试工作.</li>
      <li>开展大流量和系统升级压测, 数据库迁移压测：使用jmeter、locust和visualVm等性能工具做restful接口和前端web页面压测.</li>
    </ol>
  responsibility: 11人支付核心团队骨员工, 独立支撑触达域9个子系统的业务测试, 3人小队组长负责社区域十多个子系统的h5测试, 


- project: 大数据, 数据管理平台测试
  company: 趣头条
  duration: 2019年12月 &mdash; 现在
  description:
    <ol class="resume-item-list">
      <li>负责实时数仓的测试工作, 全程参与商业化数据中台的设计开发测试, 编写各类复杂sql测试ODS层, DWD层, DIM层, DWS主题表, ADS层的各类数据的准确性, 编写代码做持续监控.</li>
      <li>负责公司DMP系统10多个微服务系统的测试, 使用pytest测试框架持续为每周的功能迭代编写自动化测试, daily run和上线前回归.</li>
      <li>负责数据管理平台(DMP)实时圈人项目测试, 该项目使用flink消费线上的用户行为特征信息, 与内存数据库的人群包规则做匹配, 实时计算出每个用户的标签. 编写自动化脚本操作aerospike做各类数据验证.</li>
      <li>负责离线关联数据流测试工作, 该需求使用spark-streaming消费线上展点消信息, 再由解析批处理任务和关联批处理任务聚合离线数据流. 编写spark导入工具从线上导入数据到线下, 验证中间数据和结果数据的准确性, 编写代码做持续监控.</li>
      <li>负责实时logjoin数据流测试, 在测试环境运行flink任务, 编写脚本发送各种类型的数据流消息, 操作hbase做算子级别的数据验证.</li>
      <li>负责用户画像系统重构测试, 用grpc和sdk调用接口同时对比新老套系统100万用户的22个字段, 利用golang并发技术和直方图统计新老差异, 上线0问题.</li>
    </ol>
  responsibility: 负责数据管理平台十多个系统的测试工作, 负责大数据数百个离线和实时任务的测试工作.
